<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>bluetooth on jouyouyun&#39;s blog</title>
    <link>https://jouyouyun.github.io/tags/bluetooth/</link>
    <description>Recent content in bluetooth on jouyouyun&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>jouyouyun</copyright>
    <lastBuildDate>Sun, 15 Mar 2020 11:38:21 +0800</lastBuildDate><atom:link href="https://jouyouyun.github.io/tags/bluetooth/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DDE 后端 Tutorial</title>
      <link>https://jouyouyun.github.io/post/dde-daemon-tutorial/</link>
      <pubDate>Sun, 15 Mar 2020 11:38:21 +0800</pubDate>
      
      <guid>https://jouyouyun.github.io/post/dde-daemon-tutorial/</guid>
      <description>dde 后端使用 go 作为主要的开发语言，使用 dbus 提供接口，主要使用 gsettings 来保存配置。所以在进行后端开发前需要对以上内容有基本的了解，这里假定本文档的阅读者熟悉 dbus 和 gsettings ，并有一定的开发经验。
这里就只对 go 进行简单的介绍。
go go 是一种类 c 的语言，但没有了 c 中令人头疼的指针和内存管理问题，极大的提高了开发效率。 go 中使用 package 来封装同一功能的模块，首字母大写的变量和函数是可以被其它 package 使用的。
学习 go 至少需要了解以下内容。
编码风格 go 提供了 gofmt 工具来对代码进行格式化，以使用统一的代码风格。因此在代码保存之前需要使用 gofmt 先进行格式化。
保存前格式化这种操作，一般可在编辑器中配置，如 vim , emacs 等，根据个人习惯选择编辑器。
变量 go 支持使用时声明和使用 var 声明两种方式，如下：
使用 var 声明 // 主动声明 var ( outData []byte err error ) outData, err = os.Exec(&amp;#34;ls&amp;#34;).Output() 使用时声明 // 使用时声明 outData, err := os.</description>
    </item>
    
    <item>
      <title>Bluetooth FAQ</title>
      <link>https://jouyouyun.github.io/post/bluetooth-faq/</link>
      <pubDate>Mon, 20 Nov 2017 21:38:21 +0800</pubDate>
      
      <guid>https://jouyouyun.github.io/post/bluetooth-faq/</guid>
      <description>&lt;p&gt;收集遇到的 &lt;code&gt;bluetooth&lt;/code&gt; 问题，使用的是 &lt;code&gt;deepin&lt;/code&gt; 。&lt;/p&gt;
&lt;h2 id=&#34;控制中心不显示蓝牙模块&#34;&gt;控制中心不显示蓝牙模块&lt;/h2&gt;
&lt;p&gt;蓝牙模块不显示时，可以按照以下步骤来查找原因：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;执行 &lt;code&gt;sudo dmesg|grub bluetooth&lt;/code&gt; 查看输出结果
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;输出里有 &lt;code&gt;timeout&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;此时再用 &lt;code&gt;systemctl status bluetooth.service&lt;/code&gt; 看下服务有没有正常启动，错误信息是什么，然后根据错误去网上搜索答案。&lt;/p&gt;
&lt;p&gt;如果蓝牙是由网卡提供的，此时可以试着开关一下网卡的硬件开关。因为内核在初始化网卡之前初始化蓝牙，就会导致蓝牙设备不可用，重新初始化一次就好了。
如果还是无效那就重启进入 &lt;code&gt;window&lt;/code&gt; ，再 &lt;code&gt;window&lt;/code&gt; 里开关一次蓝牙再重启到 &lt;code&gt;linux&lt;/code&gt; 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输出里无 &lt;code&gt;timeout&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这就表明初始化没问题，继续下一步&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;</description>
    </item>
    
  </channel>
</rss>
